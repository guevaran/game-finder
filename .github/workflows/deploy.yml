name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/game-finder:latest

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SSH_PORT }}
          source: 'docker-compose.yml'
          target: '${{ vars.PROJECT_PATH }}'

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SSH_PORT }}
          script: |
            cd ${{ vars.PROJECT_PATH }}

            # Create .env file with environment variables
            cat > .env << EOF
            IGDB_API_BASE_URL="${{ vars.IGDB_API_BASE_URL }}"
            IGDB_TWITCH_AUTH_URL="${{ vars.IGDB_TWITCH_AUTH_URL }}"
            IGDB_CLIENT_ID="${{ secrets.IGDB_CLIENT_ID }}"
            IGDB_CLIENT_SECRET="${{ secrets.IGDB_CLIENT_SECRET }}"
            EOF

            docker compose pull
            docker compose down
            docker compose up -d
